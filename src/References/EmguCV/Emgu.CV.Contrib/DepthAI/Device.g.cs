//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.DepthAI
{
   public static partial class DepthAIInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveDeviceIsUsb3(IntPtr obj);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveDeviceIsEepromLoaded(IntPtr obj);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveDeviceIsRgbConnected(IntPtr obj);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveDeviceIsLeftConnected(IntPtr obj);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveDeviceIsRightConnected(IntPtr obj);
     
   }

   public partial class Device
   {

     /// <summary>
     /// True if the connection is USB3
     /// </summary>
     public bool IsUsb3
     {
        get { return DepthAIInvoke.cveDeviceIsUsb3(_ptr); } 
     }
     
     /// <summary>
     /// True if eeprom is loaded
     /// </summary>
     public bool IsEepromLoaded
     {
        get { return DepthAIInvoke.cveDeviceIsEepromLoaded(_ptr); } 
     }
     
     /// <summary>
     /// True if rgb connected
     /// </summary>
     public bool IsRgbConnected
     {
        get { return DepthAIInvoke.cveDeviceIsRgbConnected(_ptr); } 
     }
     
     /// <summary>
     /// True if left connected
     /// </summary>
     public bool IsLeftConnected
     {
        get { return DepthAIInvoke.cveDeviceIsLeftConnected(_ptr); } 
     }
     
     /// <summary>
     /// True if right connected
     /// </summary>
     public bool IsRightConnected
     {
        get { return DepthAIInvoke.cveDeviceIsRightConnected(_ptr); } 
     }
     
   }
}
